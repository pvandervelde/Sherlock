/*
Deployment script for Sherlock

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
USE [Sherlock];


GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;

GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'Sherlock')
    BEGIN
        ALTER DATABASE [Sherlock]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
        
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'Sherlock')
    BEGIN
        ALTER DATABASE [Sherlock]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [Sherlock];


GO
PRINT N'Altering [Tests].[TestStep]...';


GO
ALTER TABLE [Tests].[TestStep]
    ADD [OnFailure] NVARCHAR (50) DEFAULT 'Stop' NOT NULL;


GO
PRINT N'Creating [Tests].[ConsoleExecuteTestStep]...';


GO
CREATE TABLE [Tests].[ConsoleExecuteTestStep] (
    [pk_ConsoleExecuteTestStepId] INT            NOT NULL,
    [ExecutableFilePath]          NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([pk_ConsoleExecuteTestStepId] ASC)
);


GO
PRINT N'Creating FK_ConsoleExecuteTestStep_ToTestStep...';


GO
ALTER TABLE [Tests].[ConsoleExecuteTestStep] WITH NOCHECK
    ADD CONSTRAINT [FK_ConsoleExecuteTestStep_ToTestStep] FOREIGN KEY ([pk_ConsoleExecuteTestStepId]) REFERENCES [Tests].[TestStep] ([pk_TestStepId]) ON DELETE CASCADE;


GO
PRINT N'Altering [Tests].[AddMsiInstallTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[AddMsiInstallTestStep]
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50)
AS
    BEGIN TRANSACTION

        INSERT INTO [Tests].[TestStep]
            (
                [fk_TestEnvironmentId],
                [Order],
                [OnFailure]
            )
        VALUES
            (
                @testEnvironmentId,
                @order,
                @onFailure
            )

        DECLARE @id INT
        SELECT @id = [pk_TestStepId]
        FROM [Tests].[TestStep]
        WHERE [pk_TestStepId] = SCOPE_IDENTITY()

        INSERT INTO [Tests].[MsiInstallTestStep]
            (
                [pk_MsiInstallTestStepId]
            )
        VALUES
            (
                @id
            )

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to insert test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
    SELECT @id as Id
GO
PRINT N'Altering [Tests].[AddScriptExecuteTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[AddScriptExecuteTestStep]
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50),
    @language NVARCHAR(50)
AS
    BEGIN TRANSACTION

        INSERT INTO [Tests].[TestStep]
            (
                [fk_TestEnvironmentId],
                [Order],
                [OnFailure]
            )
        VALUES
            (
                @testEnvironmentId,
                @order,
                @onFailure
            )

        DECLARE @id INT
        SELECT @id = [pk_TestStepId]
        FROM [Tests].[TestStep]
        WHERE [pk_TestStepId] = SCOPE_IDENTITY()

        INSERT INTO [Tests].[ScriptExecuteTestStep]
            (
                [pk_ScriptExecuteTestStepId],
                [Language]
            )
        VALUES
            (
                @id,
                @language
            )

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to insert test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
    SELECT @id as Id
GO
PRINT N'Altering [Tests].[AddXCopyTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[AddXCopyTestStep]
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50),
    @destination NVARCHAR(MAX)
AS
    BEGIN TRANSACTION

        INSERT INTO [Tests].[TestStep]
            (
                [fk_TestEnvironmentId],
                [Order],
                [OnFailure]
            )
        VALUES
            (
                @testEnvironmentId,
                @order,
                @onFailure
            )

        DECLARE @id INT
        SELECT @id = [pk_TestStepId]
        FROM [Tests].[TestStep]
        WHERE [pk_TestStepId] = SCOPE_IDENTITY()

        INSERT INTO [Tests].[XCopyTestStep]
            (
                [pk_XCopyTestStepId],
                [Destination]
            )
        VALUES
            (
                @id,
                @destination
            )

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to insert test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
    SELECT @id as Id
GO
PRINT N'Altering [Tests].[GetMsiInstallTestStepsById]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[GetMsiInstallTestStepsById]
    @id INT = NULL
AS
    SELECT
        [Tests].[TestStep].[pk_TestStepId],
        [Tests].[TestStep].[fk_TestEnvironmentId],
        [Tests].[TestStep].[Order],
        [Tests].[TestStep].[OnFailure]
    FROM [Tests].[MsiInstallTestStep]
    JOIN [Tests].[TestStep]
    ON [Tests].[MsiInstallTestStep].[pk_MsiInstallTestStepId] = [Tests].[TestStep].[pk_TestStepId]
    WHERE [Tests].[MsiInstallTestStep].[pk_MsiInstallTestStepId] = @id OR @id IS NULL
GO
PRINT N'Altering [Tests].[GetScriptExecuteTestStepsById]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[GetScriptExecuteTestStepsById]
    @id INT = NULL
AS
    SELECT
        [Tests].[TestStep].[pk_TestStepId],
        [Tests].[TestStep].[fk_TestEnvironmentId],
        [Tests].[TestStep].[Order],
        [Tests].[TestStep].[OnFailure],
        [Tests].[ScriptExecuteTestStep].[Language]
    FROM [Tests].[ScriptExecuteTestStep]
    JOIN [Tests].[TestStep]
    ON [Tests].[ScriptExecuteTestStep].[pk_ScriptExecuteTestStepId] = [Tests].[TestStep].[pk_TestStepId]
    WHERE [Tests].[ScriptExecuteTestStep].[pk_ScriptExecuteTestStepId] = @id OR @id IS NULL
GO
PRINT N'Altering [Tests].[GetXCopyTestStepsById]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[GetXCopyTestStepsById]
    @id INT = NULL
AS
    SELECT
        [Tests].[TestStep].[pk_TestStepId],
        [Tests].[TestStep].[fk_TestEnvironmentId],
        [Tests].[TestStep].[Order],
        [Tests].[TestStep].[OnFailure],
        [Tests].[XCopyTestStep].[Destination]
    FROM [Tests].[XCopyTestStep]
    JOIN [Tests].[TestStep]
    ON [Tests].[XCopyTestStep].[pk_XCopyTestStepId] = [Tests].[TestStep].[pk_TestStepId]
    WHERE [Tests].[XCopyTestStep].[pk_XCopyTestStepId] = @id OR @id IS NULL
GO
PRINT N'Altering [Tests].[UpdateMsiInstallTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[UpdateMsiInstallTestStep]
    @id INT,
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50)
AS
    IF NOT EXISTS (
        SELECT * 
        FROM [Tests].[MsiInstallTestStep]
        WHERE [pk_MsiInstallTestStepId] = @id)
    BEGIN
        RAISERROR 
            (
                N'An entry for a test step with ID %d does not exist.', 
                11, 
                1,
                @id
            )
        RETURN
    END

    BEGIN TRANSACTION

        UPDATE [Tests].[TestStep]
        SET
            [fk_TestEnvironmentId] = @testEnvironmentId,
            [Order] = @order,
            [OnFailure] = @onFailure
        WHERE [pk_TestStepId] = @id

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to update msi install test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
RETURN 0
GO
PRINT N'Altering [Tests].[UpdateScriptExecuteTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[UpdateScriptExecuteTestStep]
    @id INT,
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50),
    @language NVARCHAR(50)
AS
    IF NOT EXISTS (
        SELECT * 
        FROM [Tests].[ScriptExecuteTestStep]
        WHERE [pk_ScriptExecuteTestStepId] = @id)
    BEGIN
        RAISERROR 
            (
                N'An entry for a test step with ID %d does not exist.', 
                11, 
                1,
                @id
            )
        RETURN
    END

    BEGIN TRANSACTION

        UPDATE [Tests].[TestStep]
        SET
            [fk_TestEnvironmentId] = @testEnvironmentId,
            [Order] = @order,
            [OnFailure] = @onFailure
        WHERE [pk_TestStepId] = @id

        UPDATE [Tests].[ScriptExecuteTestStep]
        SET
            [Language] = @language
        WHERE [pk_ScriptExecuteTestStepId] = @id

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to update script execute test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
RETURN 0
GO
PRINT N'Altering [Tests].[UpdateXCopyTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[UpdateXCopyTestStep]
    @id INT,
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50),
    @destination NVARCHAR(MAX)
AS
    IF NOT EXISTS (
        SELECT * 
        FROM [Tests].[XCopyTestStep]
        WHERE [pk_XCopyTestStepId] = @id)
    BEGIN
        RAISERROR 
            (
                N'An entry for a test step with ID %d does not exist.', 
                11, 
                1,
                @id
            )
        RETURN
    END

    BEGIN TRANSACTION

        UPDATE [Tests].[TestStep]
        SET
            [fk_TestEnvironmentId] = @testEnvironmentId,
            [Order] = @order,
            [OnFailure] = @onFailure
        WHERE [pk_TestStepId] = @id

        UPDATE [Tests].[XCopyTestStep]
        SET
            [Destination] = @destination
        WHERE [pk_XCopyTestStepId] = @id

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to update x-copy test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
RETURN 0
GO
PRINT N'Altering [Versioning].[GetSchemaVersion]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

-- Reads current database schema version.
ALTER PROCEDURE [Versioning].[GetSchemaVersion]
AS
BEGIN
    SELECT 3
END
GO
PRINT N'Creating [Tests].[AddConsoleExecuteTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

CREATE PROCEDURE [Tests].[AddConsoleExecuteTestStep]
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50),
    @executableFilePath NVARCHAR(MAX)
AS
    BEGIN TRANSACTION

        INSERT INTO [Tests].[TestStep]
            (
                [fk_TestEnvironmentId],
                [Order],
                [OnFailure]
            )
        VALUES
            (
                @testEnvironmentId,
                @order,
                @onFailure
            )

        DECLARE @id INT
        SELECT @id = [pk_TestStepId]
        FROM [Tests].[TestStep]
        WHERE [pk_TestStepId] = SCOPE_IDENTITY()

        INSERT INTO [Tests].[ConsoleExecuteTestStep]
            (
                [pk_ConsoleExecuteTestStepId],
                [ExecutableFilePath]
            )
        VALUES
            (
                @id,
                @executableFilePath
            )

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to insert test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
    SELECT @id as Id
GO
PRINT N'Creating [Tests].[DeleteConsoleExecuteTestStepById]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

CREATE PROCEDURE [Tests].[DeleteConsoleExecuteTestStepById]
    @id INT
AS
    IF NOT EXISTS (
        SELECT * 
        FROM [Tests].[ConsoleExecuteTestStep] 
        WHERE [pk_ConsoleExecuteTestStepId] = @id)
    BEGIN
        RAISERROR 
            (
                N'No entry for a console execute test step with ID %d has been found', 
                11, 
                1,
                @id
            )
        RETURN
    END

    BEGIN TRANSACTION

        DELETE FROM [Tests].[ConsoleExecuteTestStep]
        WHERE [pk_ConsoleExecuteTestStepId] = @id

        DELETE FROM [Tests].[TestStep]
        WHERE [pk_TestStepId] = @id

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to delete console execute test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
RETURN 0
GO
PRINT N'Creating [Tests].[GetConsoleExecuteTestStepsById]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

CREATE PROCEDURE [Tests].[GetConsoleExecuteTestStepsById]
    @id INT = NULL
AS
    SELECT
        [Tests].[TestStep].[pk_TestStepId],
        [Tests].[TestStep].[fk_TestEnvironmentId],
        [Tests].[TestStep].[Order],
        [Tests].[TestStep].[OnFailure],
        [Tests].[ConsoleExecuteTestStep].[ExecutableFilePath]
    FROM [Tests].[ConsoleExecuteTestStep]
    JOIN [Tests].[TestStep]
    ON [Tests].[ConsoleExecuteTestStep].[pk_ConsoleExecuteTestStepId] = [Tests].[TestStep].[pk_TestStepId]
    WHERE [Tests].[ConsoleExecuteTestStep].[pk_ConsoleExecuteTestStepId] = @id OR @id IS NULL
GO
PRINT N'Creating [Tests].[UpdateConsoleExecuteTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

CREATE PROCEDURE [Tests].[UpdateConsoleExecuteTestStep]
    @id INT,
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50),
    @executableFilePath NVARCHAR(MAX)
AS
    IF NOT EXISTS (
        SELECT * 
        FROM [Tests].[ConsoleExecuteTestStep]
        WHERE [pk_ConsoleExecuteTestStepId] = @id)
    BEGIN
        RAISERROR 
            (
                N'An entry for a test step with ID %d does not exist.', 
                11, 
                1,
                @id
            )
        RETURN
    END

    BEGIN TRANSACTION

        UPDATE [Tests].[TestStep]
        SET
            [fk_TestEnvironmentId] = @testEnvironmentId,
            [Order] = @order,
            [OnFailure] = @onFailure
        WHERE [pk_TestStepId] = @id

        UPDATE [Tests].[ConsoleExecuteTestStep]
        SET
            [ExecutableFilePath] = @executableFilePath
        WHERE [pk_ConsoleExecuteTestStepId] = @id

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to update console execute test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
RETURN 0
GO
PRINT N'Refreshing [Tests].[DeleteMsiInstallTestStepById]...';


GO
EXECUTE sp_refreshsqlmodule N'Tests.DeleteMsiInstallTestStepById';


GO
PRINT N'Refreshing [Tests].[DeleteScriptExecuteTestStepById]...';


GO
EXECUTE sp_refreshsqlmodule N'Tests.DeleteScriptExecuteTestStepById';


GO
PRINT N'Refreshing [Tests].[DeleteXCopyTestStepById]...';


GO
EXECUTE sp_refreshsqlmodule N'Tests.DeleteXCopyTestStepById';


GO
PRINT N'Refreshing [Tests].[GetTestStepsByTestEnvironmentId]...';


GO
EXECUTE sp_refreshsqlmodule N'Tests.GetTestStepsByTestEnvironmentId';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [Sherlock];


GO
ALTER TABLE [Tests].[ConsoleExecuteTestStep] WITH CHECK CHECK CONSTRAINT [FK_ConsoleExecuteTestStep_ToTestStep];


GO
PRINT N'Update complete.';


GO
