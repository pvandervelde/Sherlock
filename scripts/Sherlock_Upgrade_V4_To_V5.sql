/*
Deployment script for Sherlock

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


USE [Sherlock];


GO
PRINT N'Altering [Tests].[TestStep]...';


GO
ALTER TABLE [Tests].[TestStep]
    ADD [ReportIncludesSystemLog] BIT DEFAULT 0 NOT NULL;


GO
PRINT N'Creating [Tests].[TestStepReportDirectory]...';


GO
CREATE TABLE [Tests].[TestStepReportDirectory] (
    [pk_TestStepReportDirectoryId] INT            IDENTITY (1, 1) NOT NULL,
    [fk_TestStepId]                INT            NOT NULL,
    [Path]                         NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([pk_TestStepReportDirectoryId] ASC)
);


GO
PRINT N'Creating [Tests].[TestStepReportFile]...';


GO
CREATE TABLE [Tests].[TestStepReportFile] (
    [pk_TestStepReportFileId] INT            IDENTITY (1, 1) NOT NULL,
    [fk_TestStepId]           INT            NOT NULL,
    [Path]                    NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([pk_TestStepReportFileId] ASC)
);


GO
PRINT N'Creating FK_TestStepReportDirectory_ToTestStep...';


GO
ALTER TABLE [Tests].[TestStepReportDirectory] WITH NOCHECK
    ADD CONSTRAINT [FK_TestStepReportDirectory_ToTestStep] FOREIGN KEY ([fk_TestStepId]) REFERENCES [Tests].[TestStep] ([pk_TestStepId]) ON DELETE CASCADE;


GO
PRINT N'Creating FK_TestStepReportFile_ToTestStep...';


GO
ALTER TABLE [Tests].[TestStepReportFile] WITH NOCHECK
    ADD CONSTRAINT [FK_TestStepReportFile_ToTestStep] FOREIGN KEY ([fk_TestStepId]) REFERENCES [Tests].[TestStep] ([pk_TestStepId]) ON DELETE CASCADE;


GO
PRINT N'Altering [Tests].[AddConsoleExecuteTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[AddConsoleExecuteTestStep]
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50),
    @reportIncludesSystemLog BIT,
    @executableFilePath NVARCHAR(MAX)
AS
    BEGIN TRANSACTION

        INSERT INTO [Tests].[TestStep]
            (
                [fk_TestEnvironmentId],
                [Order],
                [OnFailure],
                [ReportIncludesSystemLog]
            )
        VALUES
            (
                @testEnvironmentId,
                @order,
                @onFailure,
                @reportIncludesSystemLog
            )

        DECLARE @id INT
        SELECT @id = [pk_TestStepId]
        FROM [Tests].[TestStep]
        WHERE [pk_TestStepId] = SCOPE_IDENTITY()

        INSERT INTO [Tests].[ConsoleExecuteTestStep]
            (
                [pk_ConsoleExecuteTestStepId],
                [ExecutableFilePath]
            )
        VALUES
            (
                @id,
                @executableFilePath
            )

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to insert test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
    SELECT @id as Id
GO
PRINT N'Altering [Tests].[AddMsiInstallTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[AddMsiInstallTestStep]
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50),
    @reportIncludesSystemLog BIT
AS
    BEGIN TRANSACTION

        INSERT INTO [Tests].[TestStep]
            (
                [fk_TestEnvironmentId],
                [Order],
                [OnFailure],
                [ReportIncludesSystemLog]
            )
        VALUES
            (
                @testEnvironmentId,
                @order,
                @onFailure,
                @reportIncludesSystemLog
            )

        DECLARE @id INT
        SELECT @id = [pk_TestStepId]
        FROM [Tests].[TestStep]
        WHERE [pk_TestStepId] = SCOPE_IDENTITY()

        INSERT INTO [Tests].[MsiInstallTestStep]
            (
                [pk_MsiInstallTestStepId]
            )
        VALUES
            (
                @id
            )

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to insert test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
    SELECT @id as Id
GO
PRINT N'Altering [Tests].[AddScriptExecuteTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[AddScriptExecuteTestStep]
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50),
    @reportIncludesSystemLog BIT,
    @language NVARCHAR(50)
AS
    BEGIN TRANSACTION

        INSERT INTO [Tests].[TestStep]
            (
                [fk_TestEnvironmentId],
                [Order],
                [OnFailure],
                [ReportIncludesSystemLog]
            )
        VALUES
            (
                @testEnvironmentId,
                @order,
                @onFailure,
                @reportIncludesSystemLog
            )

        DECLARE @id INT
        SELECT @id = [pk_TestStepId]
        FROM [Tests].[TestStep]
        WHERE [pk_TestStepId] = SCOPE_IDENTITY()

        INSERT INTO [Tests].[ScriptExecuteTestStep]
            (
                [pk_ScriptExecuteTestStepId],
                [Language]
            )
        VALUES
            (
                @id,
                @language
            )

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to insert test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
    SELECT @id as Id
GO
PRINT N'Altering [Tests].[AddXCopyTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[AddXCopyTestStep]
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50),
    @reportIncludesSystemLog BIT,
    @destination NVARCHAR(MAX)
AS
    BEGIN TRANSACTION

        INSERT INTO [Tests].[TestStep]
            (
                [fk_TestEnvironmentId],
                [Order],
                [OnFailure],
                [ReportIncludesSystemLog]
            )
        VALUES
            (
                @testEnvironmentId,
                @order,
                @onFailure,
                @reportIncludesSystemLog
            )

        DECLARE @id INT
        SELECT @id = [pk_TestStepId]
        FROM [Tests].[TestStep]
        WHERE [pk_TestStepId] = SCOPE_IDENTITY()

        INSERT INTO [Tests].[XCopyTestStep]
            (
                [pk_XCopyTestStepId],
                [Destination]
            )
        VALUES
            (
                @id,
                @destination
            )

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to insert test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
    SELECT @id as Id
GO
PRINT N'Altering [Tests].[GetConsoleExecuteTestStepsById]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[GetConsoleExecuteTestStepsById]
    @id INT = NULL
AS
    SELECT
        [Tests].[TestStep].[pk_TestStepId],
        [Tests].[TestStep].[fk_TestEnvironmentId],
        [Tests].[TestStep].[Order],
        [Tests].[TestStep].[OnFailure],
        [Tests].[TestStep].[ReportIncludesSystemLog],
        [Tests].[ConsoleExecuteTestStep].[ExecutableFilePath]
    FROM [Tests].[ConsoleExecuteTestStep]
    JOIN [Tests].[TestStep]
    ON [Tests].[ConsoleExecuteTestStep].[pk_ConsoleExecuteTestStepId] = [Tests].[TestStep].[pk_TestStepId]
    WHERE [Tests].[ConsoleExecuteTestStep].[pk_ConsoleExecuteTestStepId] = @id OR @id IS NULL
GO
PRINT N'Altering [Tests].[GetMsiInstallTestStepsById]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[GetMsiInstallTestStepsById]
    @id INT = NULL
AS
    SELECT
        [Tests].[TestStep].[pk_TestStepId],
        [Tests].[TestStep].[fk_TestEnvironmentId],
        [Tests].[TestStep].[Order],
        [Tests].[TestStep].[OnFailure],
        [Tests].[TestStep].[ReportIncludesSystemLog]
    FROM [Tests].[MsiInstallTestStep]
    JOIN [Tests].[TestStep]
    ON [Tests].[MsiInstallTestStep].[pk_MsiInstallTestStepId] = [Tests].[TestStep].[pk_TestStepId]
    WHERE [Tests].[MsiInstallTestStep].[pk_MsiInstallTestStepId] = @id OR @id IS NULL
GO
PRINT N'Altering [Tests].[GetScriptExecuteTestStepsById]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[GetScriptExecuteTestStepsById]
    @id INT = NULL
AS
    SELECT
        [Tests].[TestStep].[pk_TestStepId],
        [Tests].[TestStep].[fk_TestEnvironmentId],
        [Tests].[TestStep].[Order],
        [Tests].[TestStep].[OnFailure],
        [Tests].[TestStep].[ReportIncludesSystemLog],
        [Tests].[ScriptExecuteTestStep].[Language]
    FROM [Tests].[ScriptExecuteTestStep]
    JOIN [Tests].[TestStep]
    ON [Tests].[ScriptExecuteTestStep].[pk_ScriptExecuteTestStepId] = [Tests].[TestStep].[pk_TestStepId]
    WHERE [Tests].[ScriptExecuteTestStep].[pk_ScriptExecuteTestStepId] = @id OR @id IS NULL
GO
PRINT N'Altering [Tests].[GetXCopyTestStepsById]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[GetXCopyTestStepsById]
    @id INT = NULL
AS
    SELECT
        [Tests].[TestStep].[pk_TestStepId],
        [Tests].[TestStep].[fk_TestEnvironmentId],
        [Tests].[TestStep].[Order],
        [Tests].[TestStep].[OnFailure],
        [Tests].[TestStep].[ReportIncludesSystemLog],
        [Tests].[XCopyTestStep].[Destination]
    FROM [Tests].[XCopyTestStep]
    JOIN [Tests].[TestStep]
    ON [Tests].[XCopyTestStep].[pk_XCopyTestStepId] = [Tests].[TestStep].[pk_TestStepId]
    WHERE [Tests].[XCopyTestStep].[pk_XCopyTestStepId] = @id OR @id IS NULL
GO
PRINT N'Altering [Tests].[UpdateConsoleExecuteTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[UpdateConsoleExecuteTestStep]
    @id INT,
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50),
    @reportIncludesSystemLog BIT,
    @executableFilePath NVARCHAR(MAX)
AS
    IF NOT EXISTS (
        SELECT * 
        FROM [Tests].[ConsoleExecuteTestStep]
        WHERE [pk_ConsoleExecuteTestStepId] = @id)
    BEGIN
        RAISERROR 
            (
                N'An entry for a test step with ID %d does not exist.', 
                11, 
                1,
                @id
            )
        RETURN
    END

    BEGIN TRANSACTION

        UPDATE [Tests].[TestStep]
        SET
            [fk_TestEnvironmentId] = @testEnvironmentId,
            [Order] = @order,
            [OnFailure] = @onFailure,
            [ReportIncludesSystemLog] = @reportIncludesSystemLog
        WHERE [pk_TestStepId] = @id

        UPDATE [Tests].[ConsoleExecuteTestStep]
        SET
            [ExecutableFilePath] = @executableFilePath
        WHERE [pk_ConsoleExecuteTestStepId] = @id

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to update console execute test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
RETURN 0
GO
PRINT N'Altering [Tests].[UpdateMsiInstallTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[UpdateMsiInstallTestStep]
    @id INT,
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50),
    @reportIncludesSystemLog BIT
AS
    IF NOT EXISTS (
        SELECT * 
        FROM [Tests].[MsiInstallTestStep]
        WHERE [pk_MsiInstallTestStepId] = @id)
    BEGIN
        RAISERROR 
            (
                N'An entry for a test step with ID %d does not exist.', 
                11, 
                1,
                @id
            )
        RETURN
    END

    BEGIN TRANSACTION

        UPDATE [Tests].[TestStep]
        SET
            [fk_TestEnvironmentId] = @testEnvironmentId,
            [Order] = @order,
            [OnFailure] = @onFailure,
            [ReportIncludesSystemLog] = @reportIncludesSystemLog
        WHERE [pk_TestStepId] = @id

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to update msi install test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
RETURN 0
GO
PRINT N'Altering [Tests].[UpdateScriptExecuteTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[UpdateScriptExecuteTestStep]
    @id INT,
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50),
    @reportIncludesSystemLog BIT,
    @language NVARCHAR(50)
AS
    IF NOT EXISTS (
        SELECT * 
        FROM [Tests].[ScriptExecuteTestStep]
        WHERE [pk_ScriptExecuteTestStepId] = @id)
    BEGIN
        RAISERROR 
            (
                N'An entry for a test step with ID %d does not exist.', 
                11, 
                1,
                @id
            )
        RETURN
    END

    BEGIN TRANSACTION

        UPDATE [Tests].[TestStep]
        SET
            [fk_TestEnvironmentId] = @testEnvironmentId,
            [Order] = @order,
            [OnFailure] = @onFailure,
            [ReportIncludesSystemLog] = @reportIncludesSystemLog
        WHERE [pk_TestStepId] = @id

        UPDATE [Tests].[ScriptExecuteTestStep]
        SET
            [Language] = @language
        WHERE [pk_ScriptExecuteTestStepId] = @id

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to update script execute test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
RETURN 0
GO
PRINT N'Altering [Tests].[UpdateXCopyTestStep]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

ALTER PROCEDURE [Tests].[UpdateXCopyTestStep]
    @id INT,
    @testEnvironmentId INT,
    @order INT,
    @onFailure NVARCHAR(50),
    @reportIncludesSystemLog BIT,
    @destination NVARCHAR(MAX)
AS
    IF NOT EXISTS (
        SELECT * 
        FROM [Tests].[XCopyTestStep]
        WHERE [pk_XCopyTestStepId] = @id)
    BEGIN
        RAISERROR 
            (
                N'An entry for a test step with ID %d does not exist.', 
                11, 
                1,
                @id
            )
        RETURN
    END

    BEGIN TRANSACTION

        UPDATE [Tests].[TestStep]
        SET
            [fk_TestEnvironmentId] = @testEnvironmentId,
            [Order] = @order,
            [OnFailure] = @onFailure,
            [ReportIncludesSystemLog] = @reportIncludesSystemLog
        WHERE [pk_TestStepId] = @id

        UPDATE [Tests].[XCopyTestStep]
        SET
            [Destination] = @destination
        WHERE [pk_XCopyTestStepId] = @id

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to update x-copy test step with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
RETURN 0
GO
PRINT N'Altering [Versioning].[GetSchemaVersion]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

-- Reads current database schema version.
ALTER PROCEDURE [Versioning].[GetSchemaVersion]
AS
BEGIN
    SELECT 5
END
GO
PRINT N'Creating [Tests].[AddTestStepReportDirectory]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

CREATE PROCEDURE [Tests].[AddTestStepReportDirectory]
    @testStepId INT,
    @path NVARCHAR(MAX)
AS
    BEGIN TRANSACTION
        
        INSERT INTO [Tests].[TestStepReportDirectory]
            (
                [fk_TestStepId],
                [Path]
            )
        VALUES
            (
                @testStepId,
                @path
            )

        DECLARE @id INT
        SELECT @id = [pk_TestStepReportDirectoryId]
        FROM [Tests].[TestStepReportDirectory]
        WHERE [pk_TestStepReportDirectoryId] = SCOPE_IDENTITY()

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to insert test step report directory with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
    SELECT @id as Id
GO
PRINT N'Creating [Tests].[AddTestStepReportFile]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

CREATE PROCEDURE [Tests].[AddTestStepReportFile]
    @testStepId INT,
    @path NVARCHAR(MAX)
AS
    BEGIN TRANSACTION
        
        INSERT INTO [Tests].[TestStepReportFile]
            (
                [fk_TestStepId],
                [Path]
            )
        VALUES
            (
                @testStepId,
                @path
            )

        DECLARE @id INT
        SELECT @id = [pk_TestStepReportFileId]
        FROM [Tests].[TestStepReportFile]
        WHERE [pk_TestStepReportFileId] = SCOPE_IDENTITY()

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to insert test step report file with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
    SELECT @id as Id
GO
PRINT N'Creating [Tests].[DeleteTestStepReportDirectoryById]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

CREATE PROCEDURE [Tests].[DeleteTestStepReportDirectoryById]
    @id INT
AS
    IF NOT EXISTS (
        SELECT * 
        FROM [Tests].[TestStepReportDirectory] 
        WHERE [pk_TestStepReportDirectoryId] = @id)
    BEGIN
        RAISERROR 
            (
                N'No entry for a test step report directory with ID %d has been found', 
                11, 
                1,
                @id
            )
        RETURN
    END

    BEGIN TRANSACTION

        DELETE FROM [Tests].[TestStepReportDirectory]
        WHERE [pk_TestStepReportDirectoryId] = @id

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to delete test step report directory with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
RETURN 0
GO
PRINT N'Creating [Tests].[DeleteTestStepReportFileById]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

CREATE PROCEDURE [Tests].[DeleteTestStepReportFileById]
    @id INT
AS
    IF NOT EXISTS (
        SELECT * 
        FROM [Tests].[TestStepReportFile] 
        WHERE [pk_TestStepReportFileId] = @id)
    BEGIN
        RAISERROR 
            (
                N'No entry for a test step report file with ID %d has been found', 
                11, 
                1,
                @id
            )
        RETURN
    END

    BEGIN TRANSACTION

        DELETE FROM [Tests].[TestStepReportFile]
        WHERE [pk_TestStepReportFileId] = @id

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to delete test step report file with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
RETURN 0
GO
PRINT N'Creating [Tests].[GetTestStepReportDirectoriesById]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

CREATE PROCEDURE [Tests].[GetTestStepReportDirectoriesById]
    @id INT
AS
    SELECT
        [pk_TestStepReportDirectoryId],
        [fk_TestStepId],
        [Path]
    FROM [Tests].[TestStepReportDirectory]
    WHERE [pk_TestStepReportDirectoryId] = @id OR @id IS NULL
GO
PRINT N'Creating [Tests].[GetTestStepReportDirectoriesByTestStepId]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

CREATE PROCEDURE [Tests].[GetTestStepReportDirectoriesByTestStepId]
    @id INT
AS
    SELECT
        [pk_TestStepReportDirectoryId]
    FROM [Tests].[TestStepReportDirectory]
    WHERE [fk_TestStepId] = @id
GO
PRINT N'Creating [Tests].[GetTestStepReportFilesById]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

CREATE PROCEDURE [Tests].[GetTestStepReportFilesById]
    @id INT
AS
    SELECT
        [pk_TestStepReportFileId],
        [fk_TestStepId],
        [Path]
    FROM [Tests].[TestStepReportFile]
    WHERE [pk_TestStepReportFileId] = @id OR @id IS NULL
GO
PRINT N'Creating [Tests].[GetTestStepReportFilesByTestStepId]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

CREATE PROCEDURE [Tests].[GetTestStepReportFilesByTestStepId]
    @id INT
AS
    SELECT
        [pk_TestStepReportFileId]
    FROM [Tests].[TestStepReportFile]
    WHERE [fk_TestStepId] = @id
GO
PRINT N'Creating [Tests].[UpdateTestStepReportDirectory]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

CREATE PROCEDURE [Tests].[UpdateTestStepReportDirectory]
    @id INT,
    @testStepId INT,
    @path NVARCHAR(MAX)
AS
    IF NOT EXISTS (
        SELECT * 
        FROM [Tests].[TestStepReportDirectory]
        WHERE [pk_TestStepReportDirectoryId] = @id)
    BEGIN
        RAISERROR 
            (
                N'An entry for a test step report directory with ID %d does not exist.', 
                11, 
                1,
                @id
            )
        RETURN
    END

    BEGIN TRANSACTION

        UPDATE [Tests].[TestStepReportDirectory]
        SET
            [fk_TestStepId] = @testStepId,
            [Path] = @path
        WHERE [pk_TestStepReportDirectoryId] = @id

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to update test step report directory with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
RETURN 0
GO
PRINT N'Creating [Tests].[UpdateTestStepReportFile]...';


GO
-------------------------------------------------------------------------------
-- <copyright company="Sherlock">
--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
-- </copyright>
-------------------------------------------------------------------------------

CREATE PROCEDURE [Tests].[UpdateTestStepReportFile]
    @id INT,
    @testStepId INT,
    @path NVARCHAR(MAX)
AS
    IF NOT EXISTS (
        SELECT * 
        FROM [Tests].[TestStepReportFile]
        WHERE [pk_TestStepReportFileId] = @id)
    BEGIN
        RAISERROR 
            (
                N'An entry for a test step report file with ID %d does not exist.', 
                11, 
                1,
                @id
            )
        RETURN
    END

    BEGIN TRANSACTION

        UPDATE [Tests].[TestStepReportFile]
        SET
            [fk_TestStepId] = @testStepId,
            [Path] = @path
        WHERE [pk_TestStepReportFileId] = @id

        IF @@ERROR <> 0
        BEGIN
            ROLLBACK

            RAISERROR 
                (
                    'Failed to update test step report file with ID %d.', 
                    11, 
                    1,
                    @id
                )
            RETURN
        END

    COMMIT
RETURN 0
GO
PRINT N'Refreshing [Tests].[DeleteConsoleExecuteTestStepById]...';


GO
EXECUTE sp_refreshsqlmodule N'Tests.DeleteConsoleExecuteTestStepById';


GO
PRINT N'Refreshing [Tests].[DeleteMsiInstallTestStepById]...';


GO
EXECUTE sp_refreshsqlmodule N'Tests.DeleteMsiInstallTestStepById';


GO
PRINT N'Refreshing [Tests].[DeleteScriptExecuteTestStepById]...';


GO
EXECUTE sp_refreshsqlmodule N'Tests.DeleteScriptExecuteTestStepById';


GO
PRINT N'Refreshing [Tests].[DeleteXCopyTestStepById]...';


GO
EXECUTE sp_refreshsqlmodule N'Tests.DeleteXCopyTestStepById';


GO
PRINT N'Refreshing [Tests].[GetTestStepsByTestEnvironmentId]...';


GO
EXECUTE sp_refreshsqlmodule N'Tests.GetTestStepsByTestEnvironmentId';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [Sherlock];


GO
ALTER TABLE [Tests].[TestStepReportDirectory] WITH CHECK CHECK CONSTRAINT [FK_TestStepReportDirectory_ToTestStep];

ALTER TABLE [Tests].[TestStepReportFile] WITH CHECK CHECK CONSTRAINT [FK_TestStepReportFile_ToTestStep];


GO
PRINT N'Update complete.';


GO
