<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CommandLine_Options_Help_Description" xml:space="preserve">
    <value>Prints out the command line options.</value>
  </data>
  <data name="CommandLine_Options_Help_Key" xml:space="preserve">
    <value>?|h|help</value>
  </data>
  <data name="CommandLine_Param_ConfigurationFile_Description" xml:space="preserve">
    <value>The full path to the configuration file that contains the information describing the test.</value>
  </data>
  <data name="CommandLine_Param_ConfigurationFile_Key" xml:space="preserve">
    <value>c=|ConfigurationFile=</value>
  </data>
  <data name="Exceptions_Messages_InvalidInputElement" xml:space="preserve">
    <value>The input element was not valid for the current process.</value>
  </data>
  <data name="Exceptions_Messages_InvalidServerResponse" xml:space="preserve">
    <value>Invalid server response.</value>
  </data>
  <data name="Exceptions_Messages_MissingNotificationConfiguration" xml:space="preserve">
    <value>The configuration for the notification is missing.</value>
  </data>
  <data name="Exceptions_Messages_NonMatchingVersionFound" xml:space="preserve">
    <value>The version number of the configuration does not match the version of the configuration reader.</value>
  </data>
  <data name="Exceptions_Messages_NonMatchingVersionFound_WithVersions" xml:space="preserve">
    <value>The version number of the configuration (version: {0}) does not match the version of the configuration reader (version: {1}).</value>
  </data>
  <data name="Exceptions_Messages_UnknownConstraintConfiguration" xml:space="preserve">
    <value>No builder was found for the given constraint configuration.</value>
  </data>
  <data name="Exceptions_Messages_UnknownNotificationConfiguration" xml:space="preserve">
    <value>No builder was found for the given notification configuration.</value>
  </data>
  <data name="Exceptions_Messages_UnknownTestStepConfiguration" xml:space="preserve">
    <value>No builder was found for the given test step configuration.</value>
  </data>
  <data name="Header_ApplicationAndVersion" xml:space="preserve">
    <value>Sherlock console ({0})</value>
  </data>
  <data name="Header_OtherPackages_IdAndLicense" xml:space="preserve">
    <value>        {0} (version: {1}). For more information see: {2}</value>
  </data>
  <data name="Header_OtherPackages_Intro" xml:space="preserve">
    <value>This application makes use of the following open source software:</value>
  </data>
  <data name="Help_Usage_Intro" xml:space="preserve">
    <value>Usage: sherlock.console.exe [OPTIONS]</value>
  </data>
  <data name="Log_Error_ConfigurationFileDoesNotExist" xml:space="preserve">
    <value>The provided configuration file does not exist. File should be at: {0}</value>
  </data>
  <data name="Log_Error_CouldNotFindServer" xml:space="preserve">
    <value>Unable to locate the test server.</value>
  </data>
  <data name="Log_Error_InvalidInputParameters_WithException" xml:space="preserve">
    <value>Unable to parse the input parameters. Exception was: {0}</value>
  </data>
  <data name="Log_Error_ProcessingError_WithException" xml:space="preserve">
    <value>An error occurred while processing the test configuration. The exception is: {0}</value>
  </data>
  <data name="Log_Information_ApplicationAndVersion" xml:space="preserve">
    <value>Sherlock.Console - Version: {0}</value>
  </data>
  <data name="Log_Information_FoundSuitableServer_WithEndpoint" xml:space="preserve">
    <value>Found one or more suitable Sherlock servers. Using first available one with endpoint ID: {0}</value>
  </data>
  <data name="Log_Information_InputParameterConfigurationFile" xml:space="preserve">
    <value>Configuration file path: {0}</value>
  </data>
  <data name="Log_Error_MarkingTestAsReadyFailed_WithStatusCodeAndReason" xml:space="preserve">
    <value>Failed to mark test as ready for processing. Server error code: {0}. Server reason: {1}.</value>
  </data>
  <data name="Log_Error_TestEnvironmentRegistrationFailed_WithStatusCodeAndReason" xml:space="preserve">
    <value>Failed to register the test environments. Server error code: {0}. Server reason: {1}</value>
  </data>
  <data name="Log_Error_TestFileUploadFailed_WithStatusCodeAndReason" xml:space="preserve">
    <value>Failed to upload test files. Server error code: {0}. Server reason: {1}</value>
  </data>
  <data name="Log_Information_TestQueued" xml:space="preserve">
    <value>The test was queued. The test ID is: {0}</value>
  </data>
  <data name="Log_Error_TestStepParameterRegistrationFailed_WithStatusCodeAndReason" xml:space="preserve">
    <value>Failed to register the test parameters. Server error code: {0}. Server reason: {1}</value>
  </data>
  <data name="Log_Error_TestStepRegistrationFailed_WithStatusCodeAndReason" xml:space="preserve">
    <value>Failed to register the test steps. Server error code: {0}. Server reason: {1}</value>
  </data>
  <data name="Log_Warning_NoSuitableServerFound" xml:space="preserve">
    <value>No Sherlock server was found that could handle test requests.</value>
  </data>
  <data name="Output_Error_ConfigurationFileDoesNotExist" xml:space="preserve">
    <value>The provided configuration file does not exist.</value>
  </data>
  <data name="Output_Error_CouldNotFindServer" xml:space="preserve">
    <value>Unable to locate the test server.</value>
  </data>
  <data name="Output_Error_InvalidInput" xml:space="preserve">
    <value>The provided input parameters were not valid.</value>
  </data>
  <data name="Output_Error_MissingValues" xml:space="preserve">
    <value>The full path to a configuration file has to be provided.</value>
  </data>
  <data name="Output_Error_WhileProcessing" xml:space="preserve">
    <value>An error occurred while processing the test configuration.</value>
  </data>
  <data name="Output_Information_MarkingTestAsReady" xml:space="preserve">
    <value>Marking test ready for processing ...</value>
  </data>
  <data name="Output_Error_MarkingTestAsReadyFailed" xml:space="preserve">
    <value>Failed to mark test ready for processing.</value>
  </data>
  <data name="Output_Information_QueueingTest" xml:space="preserve">
    <value>Queueing test with server ...</value>
  </data>
  <data name="Output_Information_ReadingConfigurationFile" xml:space="preserve">
    <value>Reading configuration file ...</value>
  </data>
  <data name="Output_Information_RegisteringTestEnvironments" xml:space="preserve">
    <value>Registering test environments ...</value>
  </data>
  <data name="Output_Information_RegisteringTestStepParameters" xml:space="preserve">
    <value>Registering test parameters ...</value>
  </data>
  <data name="Output_Information_RegisteringTestSteps" xml:space="preserve">
    <value>Registering test steps ...</value>
  </data>
  <data name="Output_Error_TestEnvironmentRegistrationFailed" xml:space="preserve">
    <value>Failed to register test environments. Please see log for more detailed information.</value>
  </data>
  <data name="Output_Error_TestFileUploadFailed" xml:space="preserve">
    <value>Upload of test files failed. Please see the log for more detailed information.</value>
  </data>
  <data name="Output_Information_TestQueued_WithId" xml:space="preserve">
    <value>The test was successfully send to the server. The test ID is: {0}</value>
  </data>
  <data name="Output_Error_TestStepParameterRegistrationFailed" xml:space="preserve">
    <value>Failed to register test parameters. Please see the log for more detailed information.</value>
  </data>
  <data name="Output_Error_TestStepRegistrationFailed" xml:space="preserve">
    <value>Failed to register test steps. Please see log for more detailed information.</value>
  </data>
  <data name="Output_Information_UploadingTestFiles" xml:space="preserve">
    <value>Uploading test files to the server ...</value>
  </data>
  <data name="Log_Error_TestRegistrationFailed_WithStatusCodeAndReason" xml:space="preserve">
    <value>Failed to register test. Server error code: {0}. Server reason: {1}</value>
  </data>
  <data name="Output_Error_TestRegistrationFailed" xml:space="preserve">
    <value>Failed to register the test. Please see log for more detailed information.</value>
  </data>
  <data name="Output_Information_RegisteringTest" xml:space="preserve">
    <value>Registering test ...</value>
  </data>
  <data name="Log_Error_MissingApplicationConfigurationValue" xml:space="preserve">
    <value>The {0} application configuration was missing from the application configuration file.</value>
  </data>
  <data name="Output_Error_MissingWebServiceUrlConfiguration" xml:space="preserve">
    <value>The URL of the Sherlock webservice was not provided in the application configuration file. Please update the configuration file.</value>
  </data>
  <data name="Log_Error_ConfigurationFileVersionUnknown_WithVersion" xml:space="preserve">
    <value>Configuration file has unknown version [{0}].</value>
  </data>
  <data name="Log_Error_FailedToCreateStorageDirectory_WithDirectoryAndError" xml:space="preserve">
    <value>Failed to create the local storage directory at {0}. Error was {1}.</value>
  </data>
  <data name="Log_Error_FailedToReadConfigurationFile_WithError" xml:space="preserve">
    <value>Failed to read the configuration file. Error was {0}.</value>
  </data>
  <data name="Log_Information_ReadingConfigurationFile_WithFile" xml:space="preserve">
    <value>Reading configuration file from: {0}.</value>
  </data>
  <data name="Log_Trace_MarkingTestAsReady" xml:space="preserve">
    <value>Marking test as ready.</value>
  </data>
  <data name="Log_Trace_RegisteringTest" xml:space="preserve">
    <value>Registering test.</value>
  </data>
  <data name="Log_Trace_RegisteringTestEnvironments" xml:space="preserve">
    <value>Registering test environments.</value>
  </data>
  <data name="Log_Trace_RegisteringTestEnvironment_WithEnvironment" xml:space="preserve">
    <value>Registering test environment [{0}] with operating system {1}.</value>
  </data>
  <data name="Log_Trace_RegisteringTestStepParameters" xml:space="preserve">
    <value>Registering test step parameters.</value>
  </data>
  <data name="Log_Trace_RegisteringTestStepParameter_WithParameter" xml:space="preserve">
    <value>Registering test step. Key = {0}. Value = {1}.</value>
  </data>
  <data name="Log_Trace_RegisteringTestSteps" xml:space="preserve">
    <value>Registering test steps.</value>
  </data>
  <data name="Log_Trace_RegisteringTestStep_WithTestStep" xml:space="preserve">
    <value>Registering test step {0} of Type [{1}]</value>
  </data>
  <data name="Log_Trace_TestEnvironmentsRegistrationComplete" xml:space="preserve">
    <value>Test environment registration complete.</value>
  </data>
  <data name="Log_Trace_TestFilesUploadCompleted" xml:space="preserve">
    <value>Test files upload completed.</value>
  </data>
  <data name="Log_Trace_TestMarkedAsReady" xml:space="preserve">
    <value>Test marked as ready.</value>
  </data>
  <data name="Log_Trace_TestRegistrationComplete_WithTestId" xml:space="preserve">
    <value>Test registration for test {0} complete.</value>
  </data>
  <data name="Log_Trace_TestStepParametersRegistrationCompleted" xml:space="preserve">
    <value>Test step parameter registration completed.</value>
  </data>
  <data name="Log_Trace_TestStepRegistrationComplete" xml:space="preserve">
    <value>Test step registration complete.</value>
  </data>
  <data name="Log_Trace_UploadingTestFiles" xml:space="preserve">
    <value>Uploading test files.</value>
  </data>
  <data name="Log_Trace_UploadingTestFile_WithFile" xml:space="preserve">
    <value>Uploading test file: {0}.</value>
  </data>
  <data name="Exceptions_Messages_ConfigurationMissingDescriptionElement" xml:space="preserve">
    <value>The description element is missing from the configuration file.</value>
  </data>
  <data name="Exceptions_Messages_ConfigurationNotDefiningAnyEnvironmentConstraints" xml:space="preserve">
    <value>The configuration file does not define any environment constraints.</value>
  </data>
  <data name="Exceptions_Messages_ConfigurationMissingProductNameElement" xml:space="preserve">
    <value>The product name element is missing from the configuration file.</value>
  </data>
  <data name="Exceptions_Messages_ConfigurationMissingProductVersionElement" xml:space="preserve">
    <value>The product version element is missing from the configuration file.</value>
  </data>
  <data name="Exceptions_Messages_ConfigurationMissingTestPurposeElement" xml:space="preserve">
    <value>The test purpose element is missing from the configuration file.</value>
  </data>
  <data name="Exceptions_Messages_InvalidConfigurationFile" xml:space="preserve">
    <value>Invalid configuration file.</value>
  </data>
  <data name="Exceptions_Messages_ConfigurationInvalidStepOrder" xml:space="preserve">
    <value>The configuration file defines an invalid value for the step order of a test step.</value>
  </data>
  <data name="Exceptions_Messages_ConfigurationMissingParametersElement" xml:space="preserve">
    <value>The configuration file is missing a parameters element for a test step.</value>
  </data>
  <data name="Exceptions_Messages_ConfigurationNotDefiningAnyTestSteps" xml:space="preserve">
    <value>The configuration file does not define any test steps.</value>
  </data>
  <data name="Exceptions_Messages_ConfigurationTestStepParametersMustBeXData" xml:space="preserve">
    <value>Test step parameter values in the configuration file must be defined as XDATA elements.</value>
  </data>
  <data name="Exceptions_Messages_ConfigurationTestStepFilesAndDirectoriesMustBeXData" xml:space="preserve">
    <value>Test step file and directories values in the configuration file must be defined as XDATA elements.</value>
  </data>
  <data name="Exceptions_Messages_TransferTestStepElementNotValidInCurrentConfigurationVersion" xml:space="preserve">
    <value>The test step transfer element is not valid in the current version of the configuration. Please update to version 1.2 or higher.</value>
  </data>
  <data name="Exceptions_Messages_ConfigurationSystemLogTransferFlagShouldBeBoolean" xml:space="preserve">
    <value>The value for the 'includesystemlog' attribute on a test step 'transfercomplete' element should have a boolean value.</value>
  </data>
  <data name="Log_Trace_RegisteringTestStepAdditionalReportFiles" xml:space="preserve">
    <value>Registering additional report files.</value>
  </data>
  <data name="Log_Trace_RegisteringTestStepAdditionalReportFiles_WithPath" xml:space="preserve">
    <value>Registering additional report file at path: {0}</value>
  </data>
  <data name="Log_Trace_TestStepAdditionalReportFilesRegistrationCompleted" xml:space="preserve">
    <value>Registration of additional report files completed.</value>
  </data>
  <data name="Output_Information_RegisteringTestStepAdditionalReportFiles" xml:space="preserve">
    <value>Registering additional test step report files ...</value>
  </data>
</root>