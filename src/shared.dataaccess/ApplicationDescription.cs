//-----------------------------------------------------------------------
// <copyright company="Sherlock">
//     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
// </copyright>
//-----------------------------------------------------------------------

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sherlock.Shared.DataAccess
{
    using System;
    using System.Collections.Generic;
    
    /// <summary>
    /// Stores information about an application that is installed in a given environment.
    /// </summary>
    public partial class ApplicationDescription
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApplicationDescription" /> class.
        /// </summary>
        public ApplicationDescription()
        {
            this.MachineApplications = new HashSet<MachineApplication>();
            this.TestApplications = new HashSet<TestApplication>();
        }
    
        /// <summary>
        /// Gets or sets the ID of the application.
        /// </summary>
        internal int pk_ApplicationId { get; set; }
    
        /// <summary>
        /// Gets or sets the name of the application.
        /// </summary>
        public string Name { get; set; }
    
        /// <summary>
        /// Gets or sets the major part of the version.
        /// </summary>
        private int VersionMajor { get; set; }
    
        /// <summary>
        /// Gets or sets the minor part of the version.
        /// </summary>
        private int VersionMinor { get; set; }
    
        /// <summary>
        /// Gets or sets the patch part of the version.
        /// </summary>
        private int VersionPatch { get; set; }
    
        /// <summary>
        /// Gets or sets the build part of the version.
        /// </summary>
        private int VersionBuild { get; set; }
    
        /// <summary>
        /// Gets the collection containing all the machines that have the current application installed.
        /// </summary>
        public ICollection<MachineApplication> MachineApplications { get; internal set; }
    
        /// <summary>
        /// Gets the test environment mapping for the current application.
        /// </summary>
        public ICollection<TestApplication> TestApplications { get; internal set; }
    
    }
}
