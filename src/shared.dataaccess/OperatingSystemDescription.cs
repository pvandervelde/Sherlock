//-----------------------------------------------------------------------
// <copyright company="Sherlock">
//     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
// </copyright>
//-----------------------------------------------------------------------

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sherlock.Shared.DataAccess
{
    using System;
    using System.Collections.Generic;
    
    /// <summary>
    /// Stores information about an operating system that may be installed on an environment.
    /// </summary>
    public partial class OperatingSystemDescription
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OperatingSystemDescription" /> class.
        /// </summary>
        public OperatingSystemDescription()
        {
            this.Machines = new HashSet<MachineDescription>();
            this.TestEnvironments = new HashSet<TestEnvironment>();
        }
    
        /// <summary>
        /// Gets the ID of the operating system.
        /// </summary>
        internal int pk_OperatingSystemId { get; set; }
    
        /// <summary>
        /// Gets or sets the name of the operating system.
        /// </summary>
        public string Name { get; set; }
    
        /// <summary>
        /// Gets or sets the description of the service pack of the operating system.
        /// </summary>
        public string ServicePack { get; set; }
    
        /// <summary>
        /// Gets or sets the size, in bits, of a pointer in the operating system.
        /// </summary>
        internal int ArchitecturePointerSize { get; set; }
    
        /// <summary>
        /// Gets or sets the culture of the operating system.
        /// </summary>
        internal string Culture { get; set; }
    
        /// <summary>
        /// Gets a collection containing all the machines on which the current operating system is installed.
        /// </summary>
        public ICollection<MachineDescription> Machines { get; internal set; }
    
        /// <summary>
        /// Gets the collection containing the test environments related to the current operating system.
        /// </summary>
        public ICollection<TestEnvironment> TestEnvironments { get; internal set; }
    
    }
}
