//-----------------------------------------------------------------------
// <copyright company="Sherlock">
//     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.
// </copyright>
//-----------------------------------------------------------------------

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sherlock.Shared.DataAccess
{
    using System;
    using System.Collections.Generic;
    
    /// <summary>
    /// Defines the base class for a single step taken during the execution of a test.
    /// </summary>
    public abstract partial class TestStep
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TestStep" /> class.
        /// </summary>
        public TestStep()
        {
            this.TestStepParameters = new HashSet<TestStepParameter>();
        }
    
        /// <summary>
        /// Gets or sets the ID of the test step.
        /// </summary>
        internal int pk_TestStepId { get; set; }
    
        /// <summary>
        /// Gets or sets the ID of the environment on which the current test step should be executed.
        /// </summary>
        internal int fk_TestEnvironmentId { get; set; }
    
        /// <summary>
        /// Gets or sets the order index of the test step.
        /// </summary>
        public int Order { get; set; }
    
        /// <summary>
        /// Gets or sets the failure mode for the current test step.
        /// </summary>
        internal string OnFailure { get; set; }
    
        /// <summary>
        /// Gets or sets the test environment on which the current step should be executed.
        /// </summary>
        internal TestEnvironment TestEnvironment { get; set; }
    
        /// <summary>
        /// Gets or sets the parameters for the current test step.
        /// </summary>
        internal ICollection<TestStepParameter> TestStepParameters { get; set; }
    
    }
}
